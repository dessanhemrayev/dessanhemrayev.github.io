{"version":3,"sources":["App.js","index.js"],"names":["App","state","count","city","temp","iconCode","error","myTestInput","React","createRef","getWeather","event","a","preventDefault","name","ReactDOM","findDOMNode","refs","value","console","log","fetch","api_url","json","data","cod","setState","main","weather","icon","styles","width","height","className","type","ref","placeholder","onClick","this","style","src","Component","render","StrictMode","document","getElementById"],"mappings":"6PAoFeA,E,4MA/EbC,MAAM,CACJC,MAAM,EACNC,KAAK,GACLC,KAAK,GACLC,SAAU,GACVC,MAAO,G,EAETC,YAAYC,IAAMC,Y,EAEhBC,W,uCAAa,WAAOC,GAAP,mBAAAC,EAAA,yDACXD,EAAME,iBACM,mCAED,MADPC,EAAKC,IAASC,YAAY,EAAKC,KAAKV,aAAaW,OAH1C,wBAMTC,QAAQC,IAAIN,GANH,SAOWO,MAAM,qDAAD,OAAsDP,EAAtD,+BALf,qCAFD,cAOHQ,EAPG,iBAQQA,EAAQC,OARhB,QASI,SADPC,EARG,QASFC,KAIR,EAAKC,SAAS,CACZpB,MAAM,EACNH,KAAKqB,EAAKV,KACVV,KAAKoB,EAAKG,KAAKvB,KACfC,SAAS,mCAAqCmB,EAAKI,QAAQ,GAAGC,KAAO,SAjB7D,wBA0BT,EAAKH,SAAS,CACZpB,MAAM,IA3BC,4C,wDAkCdwB,OAAO,CACNC,MAAM,IACNC,OAAO,K,4CAQT,WACE,OACE,sBAAKC,UAAU,qBAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,wEAC3B,uBAAOC,KAAK,OAAOC,IAAI,cAAeC,YAAY,qIACnD,wBAAQC,QAASC,KAAK5B,WAAYuB,UAAU,yBAA5C,4CAAoF,uBACrF,mEAAmB,+BAAOK,KAAKrC,MAAME,OAAY,uBAClD,uGAAyB,+BAAOmC,KAAKrC,MAAMG,OAAY,uBACnC,IAAnBkC,KAAKrC,MAAMK,OAAW,qBAAKiC,MAAOD,KAAKR,OAAQU,IAAKF,KAAKrC,MAAMI,kB,GA9DpDoC,aCClB1B,IAAS2B,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2228b06f.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport ReactDOM from  \"react-dom\"\nimport './style/style.css'\n\nclass App extends Component {\n  state={\n    count:0,\n    city:\"\",\n    temp:\"\",\n    iconCode :\"\",\n    error: 0\n  };\n  myTestInput=React.createRef();\n   \n    getWeather = async (event)=>{\n      event.preventDefault();\n      let api_key=\"2de0955b5bffdb47a722c2878d744420\";\n      let name=ReactDOM.findDOMNode(this.refs.myTestInput).value;\n      if (name!==\"\")\n      {\n        console.log(name);\n        const api_url=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&appid=${api_key}`);\n        const data=await api_url.json();\n      if (data.cod!==\"404\")\n      {\n // console.log(data);\n       //console.log(data.weather[0].icon);\n       this.setState({\n         error:1,\n         city:data.name,\n         temp:data.main.temp,\n         iconCode:\"http://openweathermap.org/img/w/\" + data.weather[0].icon + \".png\"\n       })\n\n      }\n       \n\n      }\n      else\n      {\n        this.setState({\n          error:0\n      })\n    \n    }\n  }\n   \n    \n   styles={\n    width:150,\n    height:150\n   };\n\n  \n\n \n\n  \n  render() { \n    return ( \n      <div className=\"container centered\" >\n        <div className=\"container \"><h1>Погода</h1></div>\n         <input type=\"text\" ref='myTestInput'  placeholder='Введите название города'  /> \n        <button onClick={this.getWeather} className=\"btn btn-secondary m-2 \" >Найти</button><br></br>\n       <span>Город:</span><span>{this.state.city}</span><br></br>\n      <span>Температура:</span><span>{this.state.temp}</span><br></br>\n      {this.state.error===1&&<img style={this.styles} src={this.state.iconCode}/>}\n  \n     \n      \n          \n        \n    </div>\n             \n   \n\n    \n      \n     );\n  }\n\n}\n\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}